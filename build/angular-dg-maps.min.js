/**
 * angular-dg-maps.js
 * Simple to use Angular.js component to work with 2GIS Maps API
 * @version v0.0.3 - 2015-06-03
 * @link http://burivuhster.github.io/angular-dg-maps
 * @author Eugene Molodkin <burivuh@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(){"use strict";var a=angular.module("dg-maps",[]);a.directive("dgMap",["$log","$timeout","$rootScope",function(a,b,c){var d=angular.element('<div class="inner-dg-map" style="height: 100%; width: 100%;"></div>');return{restrict:"E",priority:100,transclude:!0,template:"<div class='angular-dg-map'> <dg-markers ng-transclude></dg-markers></div>",replace:!0,scope:{latitude:"=",longitude:"=",zoom:"=",zoomControls:"=",fullscreenControls:"=",fitToMarkers:"=",draggable:"=",geoclicker:"="},controller:["$scope",function(c){this._markers=[],this.addMarker=function(a,d){return this._markers.push(a),d=d||1,!c.map&&5>d?b(function(a,b,c){return function(){a.addMarker(b,c)}}(this,a,d++),500):void(c.map&&a.addTo(c.map))},this.removeMarker=function(b){c.map&&b.removeFrom(c.map);var d=this._markers.indexOf(b);return-1!==d?this._markers.splice(i,1):void a.error("angular-dg-maps: error while removing marker - marker not found")}}],compile:function(a){return a.append(d.attr("id","map"+Math.round(1e6*Math.random()))),this.link},link:function(b,e,f,g){return angular.isDefined(b.zoom)?void DG.then(function(){var a={zoom:b.zoom,fullscreenControl:!1,zoomControl:!1};angular.isDefined(b.latitude)&&angular.isDefined(b.longitude)&&angular.extend(a,{center:[b.latitude,b.longitude]}),angular.isDefined(b.draggable)&&!b.draggable&&angular.extend(a,{dragging:!1}),angular.isDefined(b.geoclicker)&&angular.extend(a,{geoclicker:b.geoclicker});var e=new DG.map(d.attr("id"),a),f=new DG.Control.Zoom,g=new DG.Control.Fullscreen;(!angular.isDefined(b.zoomControls)||b.zoomControls)&&f.addTo(e),(!angular.isDefined(b.fullscreenControls)||b.fullscreenControls)&&g.addTo(e);var h=!1;b.map=e,b.$watch("latitude",function(a,c){a===c||h||e.panTo([a,b.longitude])},!0),b.$watch("longitude",function(a,c){a===c||h||e.panTo([b.latitude,a])},!0),b.$watch("zoom",function(a,b){a===b||h||e.setZoom(a)},!0),b.$watch("zoomControls",function(a,b){a!==b&&(a?f.addTo(e):f.removeFrom(e))}),b.$watch("fullscreenControls",function(a,b){a!==b&&(a?g.addTo(e):g.removeFrom(e))}),e.on("zoomend",function(a){c.$root.$$phase?b.zoom=a.target.getZoom():b.$apply(function(){b.zoom=a.target.getZoom()})}),e.on("drag",function(a){var d=a.target.getCenter();d&&(c.$root.$$phase?(b.latitude=d.lat,b.longitude=d.lng):b.$apply(function(){b.latitude=d.lat,b.longitude=d.lng}))}),e.on("dragstart",function(){h=!0}),e.on("dragend",function(){h=!1})}):void a.error("angular-dg-maps: map zoom property not set")}}}]),a.directive("dgMarker",["$log",function(a){return{restrict:"E",require:"^dgMap",scope:{lon:"=longitude",lat:"=latitude",draggable:"=",dgClick:"&ngClick",alt:"=",show:"=",hint:"=",icon:"=",dragStop:"&",dragStart:"&"},link:function(b,c,d,e){var f={draggable:!!d.draggable,title:d.hint};angular.isDefined(b.alt)&&angular.extend(f,{alt:b.alt});var g=new DG.marker([b.lat,b.lon],f);if(angular.isDefined(b.popup)&&b.popup&&g.bindPopup(b.popup),angular.isDefined(d.ngClick)&&g.on("click",function(a){var c=b.dgClick()||angular.noop;c(a)}),g.on("dragstart",function(a){var c=g.getLatLng();b.$apply(function(){b.lat=c.lat,b.lon=c.lng});var d=b.dragStart()||angular.noop;d.call(g,a)}),g.on("dragend",function(a){var c=g.getLatLng();b.$apply(function(){b.lat=c.lat,b.lon=c.lng});var d=b.dragStop()||angular.noop;d.call(g,a)}),d.iconSrc)if(angular.isDefined(d.iconWidth)&&angular.isDefined(d.iconHeight)){var h=new DG.Icon({iconUrl:d.iconSrc,iconSize:[parseInt(d.iconWidth,10),parseInt(d.iconHeight,10)]});g.setIcon(h)}else a.error("angular-dg-marker: icon width and height should be specified");e.addMarker(g),b.$watch("lon",function(a){if(angular.isDefined(a)){var b=g.getLatLng();b.lng=a,g.setLatLng(b)}}),b.$watch("lat",function(a){if(angular.isDefined(a)){var b=g.getLatLng();b.lat=a,g.setLatLng(b)}}),b.$watch("hint",function(a){angular.isDefined(a)&&g.bindLabel(a)}),b.$watch("draggable",function(a){angular.isDefined(a)&&g.dragging&&g.dragging[a?"enable":"disable"]()}),c.bind("$destroy",function(){e.removeMarker(g)})}}}]),a.service("geocoder",function(){return{get:function(a,b,c){angular.extend(a,{type:"geo"}),DG.ajax("//catalog.api.2gis.ru/2.0/search",{data:a,success:b||angular.noop,error:c||angular.noop})}}})}();